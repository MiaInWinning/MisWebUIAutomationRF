*** Settings ***
Resource          原子关键词.txt
Resource          ../环境配置.txt

*** Keywords ***
进入模块
    [Arguments]    ${onemodule}    ${twomodule}    ${threemodule}=none
    [Documentation]    参数传入说明
    ...    1、${onemodule} : 第一级菜单
    ...    2、${twomodule} : 第二级菜单
    ...    3、${threemodule}:第三级菜单
    ...    关键词说明：移动鼠标的方式，当第三级菜单等于none(不存在)时，将点击第二级菜单；当第三级菜单存在时，将滑动鼠标到第二级菜单，点击第三级菜单
    日志    正在执行【进入模块】
    等待元素出现    xpath=//div[contains(text(),"${onemodule}")]    30
    鼠标移动    xpath=//div[contains(text(),"${onemodule}")]    #一级模块
    等待    1
    鼠标移动    xpath=//*[contains(text(),"${twomodule}")]    #二级模块
    Run_keyword_if    '${threemodule}'=='none'    点击元素    xpath=//*[contains(text(),"${twomodule}")]
    ...    ELSE IF    '${threemodule}'!='none'    Run Keywords    等待    1
    ...    AND    点击元素    xpath=//*[contains(text(),"${threemodule}")]    #三级模块
    [Teardown]    log    已经执行完成【进入模块】

登陆
    [Arguments]    ${user}    ${pwd}
    [Documentation]    参数传入说明
    ...
    ...    1、${user} : 账号
    ...
    ...    2、${pwd}: 密码
    ...
    ...    传入账号，密码进行登陆。此关键字不考虑各账号权限，登录后选择模块控制模块权限，操作来控制模块下功能权限。
    日志    正在进行【登陆】
    打开浏览器    ${web_ip}    chrome
    浏览器最大化
    等待元素出现    name=username    20
    输入文本    name=username    ${user}
    输入文本    name=password    ${pwd}
    点击按钮    登 录    #    xpath=//button[@type="button"]
    [Teardown]    log    已经执行完成【登陆】

页面检查
    [Arguments]    ${locator}    ${IsContains}=包含
    [Documentation]    参数传入说明
    ...    传入页面需要检查的文字
    log    正在进行【页面检查】
    等待    2
    页面包含文字    ${locator}
    [Teardown]    log    =======KeyWordExecuteStatus=======已经执行完成【页面检查】

下拉选择
    [Arguments]    ${name}    ${value}
    [Documentation]    参数传入说明
    ...
    ...    1、${name} : 下拉列表第一个input的默认值
    ...
    ...    2、${value} \ : 下拉列表展开后需要选择的值
    ...
    ...    关键词说明：简易下拉选择，由于本web下拉为input，故简易为先选择第一个input、在选择展开后input的值。
    log    正在进行【输入文本框操作】
    等待元素出现    xpath=//input[@placeholder="${name}"]    10
    点击元素    xpath=//input[@placeholder="${name}"]
    等待    1
    等待元素出现    xpath=//*[contains(text(),"${value}")]    10
    点击元素    xpath=//*[contains(text(),"${value}")]
    [Teardown]    log    已经执行完成【输入文本框】

输入文本框
    [Arguments]    ${locator}    ${TextSTR}    ${indextype}=none    #输入位置名称|输入内容|位置备注
    [Documentation]    参数传入说明
    ...
    ...    1、${Arg1}: 输入文本框的名字
    ...
    ...    2、${Arg2}: 输入文本框的值
    ...
    ...    3、${Arg3}:当界面存在多个相同名字的文本框时,需要传入此参数精准定位文本框所在位置
    ...    例如:页面包含两个姓名input,一个在主页面, 一个在 \ 个人介绍的弹出框中
    ...    需要输入第二个文本框 \ 入参为 \ \ "个人介绍"进行强关联
    log    正在进行【输入文本框操作】
    #强关联
    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!=''    log    进行强关联输入文本
    ${RunResult}    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!=''    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${indextype}")]/parent::*/following-sibling::*//*[contains(@placeholder,"${locator}")]    ${TextSTR}
    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    log    进行强关联输入文本2
    ${RunResult}    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${indextype}")]/parent::*/following-sibling::*//*[contains(text(),"${locator}")]/parent::*//*[contains(@id,"easyui_textbox_input")]    ${TextSTR}
    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    log    进行强关联输入文本3
    ${RunResult}    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${indextype}")]/parent::*//*[contains(@placeholder,"${locator}")]    ${TextSTR}
    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    log    进行强关联输入文本4    #适配系统参数input
    ${RunResult}    Run_keyword_if    '${indextype}'!='none' and '${indextype}'!='' and '${RunResult}'!='True'    Run_keyword_and_return_status    Input Text    xpath=//*[contains(text(),"${indextype}")]/parent::*/following-sibling::*//*[contains(text(),"${locator}")]/parent::*//*[contains(@class,"el-input__inner")]    ${TextSTR}
    #正常输入
    Run_keyword_if    '${indextype}'=='none' and '${RunResult}'!='True'    log    尝试重新输入1
    ${RunResult}    Run_keyword_if    '${indextype}'=='none' and '${RunResult}'!='True'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(@placeholder,"${locator}")]    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新输入2
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${locator}")]/following-sibling::input[1]    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新输入3
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${locator}")]/following-sibling::*/input    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新输入4
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${locator}")]/following-sibling::*//*[contains(@class,"__inner")]    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新输入5
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${locator}")]/parent::*/following-sibling::*//*[contains(@class,"__inner")]    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新输入6
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Input Text    xpath=.//*[contains(text(),"${locator}")]/following-sibling::*//*[contains(@class,"textbox-text")]    ${TextSTR}
    Run_keyword_if    '${RunResult}'=='False'    Run Keywords    log    在【${locator}】输入${TextSTR}失败
    ...    AND    Should Match Regexp    1    2    在【${locator}】输入${TextSTR}失败
    [Teardown]    log    已经执行完成【输入文本框】

点击按钮
    [Arguments]    ${locator}    ${locatorType}=none    ${index}=1
    log    正在进行【点击操作】
    #进行点击操作
    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!=''    log    进入强关联点击操作1
    ${RunResult}    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!=''    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),'${locatorType}')]/parent::*[1]//*[contains(text(),'${locator}')]
    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!='' and '${RunResult}'=='False'    log    进入强关联点击操作2
    ${RunResult}    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!='' and '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),'${locatorType}')]/parent::*[1]/parent::*[1]//*[contains(text(),'${locator}')]
    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!='' and '${RunResult}'=='False'    log    进入强关联点击操作3-value
    ${RunResult}    Run_keyword_if    '${locatorType}'!='none' and '${locatorType}'!='' and '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[text()="${locatorType}"]/parent::*/following-sibling::*//*[contains(@value,'${locator}')]
    #正常点击
    Run_keyword_if    '${RunResult}'!='True' and '${locatorType}'=='none'    log    进行第一次点击
    ${RunResult}    Run_keyword_if    '${RunResult}'!='True' and '${locatorType}'=='none'    Run_keyword_and_return_status    click element    xpath=.//*[text()='${locator}'][${index}]
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击1-1
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(@placeholder,"${locator}")]
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击1-2
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),'${locator}')][${index}]
    #表格-2-td-tr
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击2-1
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//td[.='${locator}'][${index}]
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击2-2
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//tr[${index}]//*[contains(text(),"${locator}")]
    #value-2
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击3-value
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(@value,'${locator}')]
    #--#由于if语句不执行也会将变量置空
    Comment    log    点击结果${RunResultvalue}
    Comment    ${RunResult}    set variable if    ${RunResultvalue}=='True'    ${RunResult}    ${RunResultvalue}
    Comment    log    判断结果${RunResult}
    #--#由于if语句不执行也会将变量置空
    #radio-1
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击4-radio
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),"${locator}")]//*[contains(@type,"radio")][${index}]
    #点击失败判断终止
    Run_keyword_if    '${RunResult}'=='False'    Run Keywords    log    在【${locator}】失败
    ...    AND    Should Match Regexp    在【${locator}】点击失败1    在【${locator}】点击失败2
    [Teardown]    log    =======KeyWordExecuteStatus=======已经执行完成【点击按钮】

点击弹出框
    [Arguments]    ${locator}    ${WindowsRemark}=none    ${index}=*
    log    =======KeyWordExecuteStatus=======正在执行【弹出框点击】
    #开始执行弹出框点击
    #强关联弹框
    Run_keyword_if    '${WindowsRemark}'!='none'    log    尝试强关联弹出框点击1
    ${RunResult}    Run_keyword_if    '${WindowsRemark}'!='none'    Run_keyword_and_return_status    click element    xpath=.//*[contains(@class,"el-menu--horizontal")][*]//*[text()="${WindowsRemark}"]/parent::*[1]/following-sibling::*//*[text()="${locator}"]
    Run_keyword_if    '${RunResult}'=='False' and '${WindowsRemark}'!='none'    log    尝试强关联弹出框点击2
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False' and '${WindowsRemark}'!='none'    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),'${WindowsRemark}')]/parent::*/parent::*//*[contains(text(),'${locator}')]
    #默认弹框正常点击
    Run_keyword_if    '${RunResult}'!='Ture'    log    正在进行第一次点击1
    ${RunResult}    Run_keyword_if    '${RunResult}'!='Ture'    Run_keyword_and_return_status    click element    xpath=//*[contains(@class,"el-message-box__btns")]/parent::div/div/button/*[contains(text(),"${locator}")]
    #js点击
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新弹出框js点击
    Run_keyword_if    '${RunResult}'=='False'    Assign Id To Element    xpath=.//*[text()='${locator}']    clickme
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    Execute JavaScript    document.getElementById("clickme").click();
    Run_keyword_if    '${RunResult}'=='False'    Run Keywords    log    在【${locator}】点击失败
    ...    AND    Should Match Regexp    1    2
    [Teardown]    log    =======KeyWordExecuteStatus=======已经执行完成【弹出框点击】

选中复选框
    [Arguments]    ${locator}    ${locatorType}=none    ${index}=1
    log    正在进行【选中复选框】
    #进行点击操作
    log    第一次点击1-checkbox
    ${RunResult}    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),"${locator}")]//*[contains(@type,"checkbox")][${index}]
    #以下为重试
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击2-radio
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(text(),"${locator}")]/preceding-sibling::*[contains(@type,"checkbox")][${index}]
    Run_keyword_if    '${RunResult}'=='False'    log    尝试重新点击3-radio-string
    ${RunResult}    Run_keyword_if    '${RunResult}'=='False'    Run_keyword_and_return_status    click element    xpath=.//*[contains(string(),"${locator}")]//*[contains(@type,"checkbox")][${index}]
    #选中失败终止
    Run_keyword_if    '${RunResult}'=='False'    Run Keywords    log    在【${locator}】点击单选框失败
    ...    AND    Should Match Regexp    1    2
    [Teardown]    log    =======KeyWordExecuteStatus=======已经执行完成【选中单选框】

单个日期选择
    [Arguments]    ${DropBtn_xpath}    ${input_date}
    [Documentation]    输入：    #    ${DropBtn_xpath}    Set Variable    xpath=//*[contains(text(),"${dropBtn_xpath}")]/following-sibling::div/div    #    #以下为选择日期操作    #    ${prevAndAfter}    Set Variable    0    #0表示向前翻，1表示向后翻    #    ${base_path}    Set Variable    //div[@class='el-picker-panel el-date-picker el-popper has-time']    #基础路径    #    ${dict}    Create Dictionary    1=一月    2=二月    3=三月    4=四月    5=五月    6=六月    7=七月    8=八月    9=九月    10=十月    11=十一月    12=十二月    #    ${prev_month}    Set Variable    ${base_path}//button[contains(@aria-label,'上个月')]    #点击上一个月    #    ${prev_year}    Set Variable    ${base_path}//div[contains(@class,'前一年')]    #    ${next_year}    Set Variable    ${base_path}//div[contains(@class,'后一年')]    #    ${next_month}    Set Variable    ${base_path}//div[contains(@class,'下个月')]    #    ${input_date}    Set Variable    '${input_date}'.split('-')    #    ${start_abbr}    Evaluate    ','.join(${input_date})    #匹配要点击开始哪天的abbr属性    #    ${s_year}    Evaluate    ${input_date}[0]    #    ${s_month}    Evaluate    ${input_date}[1]    #    ${s_day}    Evaluate    ${input_date}[2]    #    ${startDayPath}    Set Variable    ${base_path}//td[text()=${s_day} and @abbr='${start_abbr}']    #需要点击的开始day    #    ${s_year}    Evaluate    int('${s_year}')    #    ${s_month}    Evaluate    int('${s_month}')    #    ${s_day}    Evaluate    int('${s_day}')    #    Click Element    ${DropBtn_xpath}    #点击开始时间下拉按钮    #    ${current_ym}    Set Variable    ${base_path}//div[contains(@class,'calendar-title')]/span    #当前年月    #    ${yearAndMonthStr}    Get Text    ${current_ym}    #    ${yearAndMonthArr}    Evaluate    u'${yearAndMonthStr}'.split(' ')    #    ${current_year}    Evaluate    ${yearAndMonthArr}[1]    #    ${current_month}    Evaluate    ${yearAndMonthArr}[0]    #    ${year_no}    Evaluate    int('${current_year}')    #当前年份    #    ${keys}    Get Dictionary Keys    ${dict}    #    ${values}    Get Dictionary Values    ${dict}    #    ${v_len}    Evaluate    len(${values})    #    FOR    ${i}    IN RANGE    ${v_len}    #    ${temp}    Evaluate    ${values}[${i}]    #    ${month_no}    Run Keyword If    '${current_month}'=='${temp}'    Evaluate    ${keys}[${i}]    #    Exit For Loop If    '${current_month}'=='${temp}'    #    ${month_no}    Evaluate    int('${month_no}')    #当前月份    #    #确定要翻几年    #    ${yearTurnCount}    Evaluate    ${s_year}-${year_no}    #    ${prevAndAfter1}    Run Keyword If    ${yearTurnCount}>0    Set Variable    1    # ELSE    Set Variable    0    #    ${yearTurnCount}    Evaluate    abs(${yearTurnCount})    #    #确定要翻几月    #    ${monthTurnCount}    Evaluate    ${s_month}-${month_no}    #    ${prevAndAfter2}    Run Keyword If    ${monthTurnCount}>0    Set Variable    1    # ELSE    Set Variable    0    #    ${monthTurnCount}    Evaluate    abs(${monthTurnCount})    #    FOR    ${i}    IN RANGE    ${yearTurnCount}    #    Run Keyword If    ${prevAndAfter1}==0    Click Element    ${prev_year}    # ELSE    Click Element    ${next_year}    #    FOR    ${i}    IN RANGE    ${monthTurnCount}    #    Run Keyword If    ${prevAndAfter2}==0    Click Element    ${prev_month}    # ELSE    Click Element    ${next_month}    #    ${DropBtn_xpath}    Set Variable    xpath=.//*[contains(@placeholder,'${DropBtn_xpath}')]/preceding-sibling::span/a    #    #以下为选择日期操作    #    Set Selenium Speed    0.5    #    ${prevAndAfter}    Set Variable    0    #0表示向前翻，1表示向后翻    #    ${base_path}    Set Variable    //div[@class='panel combo-p' and contains(@style,'display: block')]    #    ${dict}    Create Dictionary    1=一月    2=二月    3=三月    4=四月    5=五月    6=六月    7=七月    8=八月    9=九月    10=十月    11=十一月    12=十二月    #    ${prev_month}    Set Variable    ${base_path}//div[contains(@class,'calendar-prevmonth')]    #点击上一个月    #    ${prev_year}    Set Variable    ${base_path}//div[contains(@class,'calendar-prevyear')]    #    ${next_year}    Set Variable    ${base_path}//div[contains(@class,'calendar-nextyear')]    #    ${next_month}    Set Variable    ${base_path}//div[contains(@class,'calendar-nextmonth')]    #    ${input_date}    Set Variable    '${input_date}'.split('-')    #    ${start_abbr}    Evaluate    ','.join(${input_date})    #匹配要点击开始哪天的abbr属性    #    ${s_year}    Evaluate    ${input_date}[0]    #    ${s_month}    Evaluate    ${input_date}[1]    #    ${s_day}    Evaluate    ${input_date}[2]    #    ${startDayPath}    Set Variable    ${base_path}//td[text()=${s_day} and @abbr='${start_abbr}']    #需要点击的开始day    #    ${s_year}    Evaluate    int('${s_year}')    #    ${s_month}    Evaluate    int('${s_month}')    #    ${s_day}    Evaluate    int('${s_day}')    #    Click Element    ${DropBtn_xpath}    #点击开始时间下拉按钮    #    ${current_ym}    Set Variable    ${base_path}//div[contains(@class,'calendar-title')]/span    #当前年月    #    ${yearAndMonthStr}    Get Text    ${current_ym}    #    ${yearAndMonthArr}    Evaluate    u'${yearAndMonthStr}'.split(' ')    #    ${current_year}    Evaluate    ${yearAndMonthArr}[1]    #    ${current_month}    Evaluate    ${yearAndMonthArr}[0]    #    ${year_no}    Evaluate    int('${current_year}')    #当前年份    #    ${keys}    Get Dictionary Keys    ${dict}    #    ${values}    Get Dictionary Values    ${dict}    #    ${v_len}    Evaluate    len(${values})    #    FOR    ${i}    IN RANGE    ${v_len}    #    ${temp}    Evaluate    ${values}[${i}]    #    ${month_no}    Run Keyword If    '${current_month}'=='${temp}'    Evaluate    ${keys}[${i}]    #    Exit For Loop If    '${current_month}'=='${temp}'    #    ${month_no}    Evaluate    int('${month_no}')    #当前月份    #    #确定要翻几年    #    ${yearTurnCount}    Evaluate    ${s_year}-${year_no}    #    ${prevAndAfter1}    Run Keyword If    ${yearTurnCount}>0    Set Variable    1    # ELSE    Set Variable    0    #    ${yearTurnCount}    Evaluate    abs(${yearTurnCount})    #    #确定要翻几月    #    ${monthTurnCount}    Evaluate    ${s_month}-${month_no}    #    ${prevAndAfter2}    Run Keyword If    ${monthTurnCount}>0    Set Variable    1    # ELSE    Set Variable    0    #    ${monthTurnCount}    Evaluate    abs(${monthTurnCount})    #    FOR    ${i}    IN RANGE    ${yearTurnCount}    #    Run Keyword If    ${prevAndAfter1}==0    Click Element    ${prev_year}    # ELSE    Click Element    ${next_year}    #    FOR    ${i}    IN RANGE    ${monthTurnCount}    #    Run Keyword If    ${prevAndAfter2}==0    Click Element    ${prev_month}    # ELSE    Click Element    ${next_month}
    ...
    ...    1、${input_date}：输入的日期参数，格式为2016-2-3 ，个位数不补0，不能写为2016-02-03
    ...
    ...    2、${dropBtn_xpath}:日期控件的下拉按钮xpath路径
    ...
    ...
    #    Click Element    ${startDayPath}
    点击元素    xpath=//label[contains(text(),"${DropBtn_xpath}")]/following-sibling::div/div
    ${year}    Evaluate    '${input_date}'.strip('')[0:10]
    ${day}    Evaluate    '${input_date}'.strip('')[11:16]
    日志    ${year}
    日志    ${day}
    等待    3
    输入文本    //div[contains(@x-placement,'bottom-start')]/div/div//span/div/input[@class='el-input__inner' and @placeholder='选择日期' ]    ${year}
    等待    3
    点击元素    //div[contains(@x-placement,'bottom-start')]/div/div//span/div/input[@class='el-input__inner' and @placeholder='选择时间' ]
    清空输入框    //div[contains(@x-placement,'bottom-start')]/div/div//span/div/input[@class='el-input__inner' and @placeholder='选择时间' ]
    输入文本    //div[contains(@x-placement,'bottom-start')]/div/div//span/div/input[@class='el-input__inner' and @placeholder='选择时间' ]    ${day}
    等待    3
    点击元素    //div[contains(@x-placement,'bottom-start')]/div[2]//*[contains(text(),"确定")]
    #    点击元素    //div[@class='el-picker-panel el-date-picker el-popper has-time'][2]/div[@class='el-picker-panel__footer']/button[@class='el-button el-picker-panel__link-btn el-button--default el-button--mini is-plain']/span
    [Teardown]    log    =======KeyWordExecuteStatus=======已经执行完成【单个日期选择】

等待元素出现2
    [Arguments]    ${wupce}    ${s}
    等待元素出现    //*[contains(@placeholder,"${wupce}")]    ${s}